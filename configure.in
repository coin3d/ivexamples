dnl  This can be any file in the package.
AC_INIT(Mentor/02.1.HelloCone.cpp.in)

dnl  Locate C++ compiler and set C++ as the default compiler to run
dnl  in tests.
AC_PROG_CXX
AC_LANG_CPLUSPLUS

dnl *******************************************************************
dnl * Miscellaneous options and initializations.
dnl *******************************************************************

AM_INIT_AUTOMAKE(ivexamples, 0.0.1)

dnl  File to cram results from the configure tests into.
AM_CONFIG_HEADER(config.h)

dnl  Turn off default maintainer make-rules -- use ./autogen.sh instead.
AM_MAINTAINER_MODE

# **************************************************************************
# Search and set up necessary stuff to use the GUI library.

AC_ARG_WITH(
  toolkit,
  AC_HELP_STRING([--with-toolkit=<toolkit>],
                 [select GUI toolkit to use (default=SoXt)]),
  [lwithval=`echo $withval | tr A-Z a-z`
  case $lwithval in
    xt  | soxt)    sim_ac_gui_toolkit=soxt  ;;
    qt  | soqt)    sim_ac_gui_toolkit=soqt  ;;
    gtk | sogtk)   sim_ac_gui_toolkit=sogtk ;;
    be  | sobe)    sim_ac_gui_toolkit=sobe  ;;
    iv  | oiv)     sim_ac_gui_toolkit=oiv   ;;
    *) AC_MSG_ERROR([invalid --with-toolkit value: "$withval"]) ;;
  esac],
  [sim_ac_gui_toolkit=soxt])

# Environment variables to configure the generic sourcefiles.

sim_ac_path=$PATH
test x"$prefix" = xNONE || sim_ac_path=$prefix/bin:$sim_ac_path

sim_ac_gui_configcmd=${sim_ac_gui_toolkit}-config
AC_PATH_PROG(soguiconfig, $sim_ac_gui_configcmd, false, $sim_ac_path)
if $soguiconfig; then
  GUI=`$soguiconfig --ac-subst GUI`
  Gui=`$soguiconfig --ac-subst Gui`
  gui=`$soguiconfig --ac-subst gui`
  WIDGET=`$soguiconfig --ac-subst WIDGET`
  EVENT=`$soguiconfig --ac-subst EVENT`
  COMPONENTHEADER=`$soguiconfig --ac-subst COMPONENTHEADER`
else
  AC_MSG_ERROR([cannot find required '$sim_ac_gui_configcmd' utility])
fi

if test x"${WINWIDGET+set}" != x"set"; then
  WINWIDGET=$WIDGET
fi

AC_SUBST(GUI)
AC_SUBST(Gui)
AC_SUBST(gui)
AC_SUBST(WIDGET)
AC_SUBST(WINWIDGET)
AC_SUBST(EVENT)
AC_SUBST(COMPONENTHEADER)

CPPFLAGS="`$soguiconfig --cppflags` $CPPFLAGS"
LDFLAGS="`$soguiconfig --ldflags` $LDFLAGS"
LIBS="`$soguiconfig --libs` $LIBS"

# Include Inventor Mentor examples that are Xt/Motif dependent if
# we're building against SoXt.
AM_CONDITIONAL(BUILD_XT_ONLY_EXAMPLES, test "$Gui" = "Xt")


dnl *******************************************************************
dnl * Compiler control.
dnl *******************************************************************

SIM_DEBUGSYMBOLS
SIM_AC_RTTI_SUPPORT
SIM_EXCEPTION_HANDLING
SIM_PROFILING_SUPPORT
SIM_COMPILER_WARNINGS

dnl *******************************************************************
dnl * All files configure must automatically generate.
dnl *******************************************************************

AC_OUTPUT([
	Makefile
	Mentor/Makefile
	Mentor/02.1.HelloCone.cpp
	Mentor/02.2.EngineSpin.cpp
	Mentor/02.3.Trackball.cpp
	Mentor/02.4.Examiner.cpp
	Mentor/03.1.Molecule.cpp
	Mentor/03.2.Robot.cpp
	Mentor/03.3.Naming.cpp
	Mentor/04.1.Cameras.cpp
	Mentor/04.2.Lights.cpp
	Mentor/05.1.FaceSet.cpp
	Mentor/05.2.IndexedFaceSet.cpp
	Mentor/05.3.TriangleStripSet.cpp
	Mentor/05.4.QuadMesh.cpp
	Mentor/05.5.Binding.cpp
	Mentor/05.6.TransformOrdering.cpp
	Mentor/06.1.Text.cpp
	Mentor/06.2.Simple3DText.cpp
	Mentor/06.3.Complex3DText.cpp
	Mentor/07.1.BasicTexture.cpp
	Mentor/07.2.TextureCoordinates.cpp
	Mentor/07.3.TextureFunction.cpp
	Mentor/08.1.BSCurve.cpp
	Mentor/08.2.UniCurve.cpp
	Mentor/08.3.BezSurf.cpp
	Mentor/08.4.TrimSurf.cpp
	Mentor/09.1.Print.cpp
	Mentor/09.2.Texture.cpp
	Mentor/09.3.Search.cpp
	Mentor/09.4.PickAction.cpp
	Mentor/09.5.GenSph.cpp
	Mentor/10.1.addEventCB.cpp
	Mentor/10.2.setEventCB.cpp
	Mentor/10.3and4.MotifList.cpp
	Mentor/10.5.SelectionCB.cpp
	Mentor/10.6.PickFilterTopLevel.cpp
	Mentor/10.7.PickFilterManip.cpp
	Mentor/10.8.PickFilterNodeKit.cpp
	Mentor/11.1.ReadFile.cpp
	Mentor/11.2.ReadString.cpp
	Mentor/12.1.FieldSensor.cpp
	Mentor/12.2.NodeSensor.cpp
	Mentor/12.3.AlarmSensor.cpp
	Mentor/12.4.TimerSensor.cpp
	Mentor/13.1.GlobalFlds.cpp
	Mentor/13.2.ElapsedTime.cpp
	Mentor/13.3.TimeCounter.cpp
	Mentor/13.4.Gate.cpp
	Mentor/13.5.Boolean.cpp
	Mentor/13.6.Calculator.cpp
	Mentor/13.7.Rotor.cpp
	Mentor/13.8.Blinker.cpp
	Mentor/14.1.FrolickingWords.cpp
	Mentor/14.2.Editors.cpp
	Mentor/14.3.Balance.cpp
	Mentor/15.1.ConeRadius.cpp
	Mentor/15.2.SliderBox.cpp
	Mentor/15.3.AttachManip.cpp
	Mentor/15.4.Customize.cpp
	Mentor/16.1.Overlay.cpp
	Mentor/16.2.Callback.cpp
	Mentor/16.3.AttachEditor.cpp
	Mentor/16.4.OneWindow.cpp
	Mentor/16.5.Examiner.cpp
	Mentor/17.1.ColorIndex.cpp
	Mentor/17.2.GLCallback.cpp
	Mentor/17.3.GLFloor.cpp
	Toolmaker/Makefile
	Toolmaker/02.Nodes/Makefile
	Toolmaker/02.Nodes/newNodes.cpp
	Toolmaker/03.Fields/Makefile
	Toolmaker/04.Actions/Makefile
	Toolmaker/05.Elements/Makefile
])

dnl ************************************************************************
